<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="12" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-12T09:54:21 IST" name="Loan Department" finished-at="2024-03-12T09:54:22 IST" duration-ms="771">
    <groups>
      <group name="smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@1de5f259]" name="ploan" class="test.day2"/>
        <method signature="day3.MobileLoginLoan()[pri:0, instance:test.day3@194bcebf]" name="MobileLoginLoan" class="test.day3"/>
        <method signature="day4.MobileLoginHomeLoan()[pri:0, instance:test.day4@729d991e]" name="MobileLoginHomeLoan" class="test.day4"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-03-12T09:54:21 IST" name="Regression" finished-at="2024-03-12T09:54:21 IST" duration-ms="38">
    </test> <!-- Regression -->
    <test started-at="2024-03-12T09:54:22 IST" name="Test" finished-at="2024-03-12T09:54:22 IST" duration-ms="414">
      <class name="test.day4">
        <test-method signature="LoginAPIHomeloan()[pri:0, instance:test.day4@729d991e]" started-at="2024-03-12T09:54:22 IST" name="LoginAPIHomeloan" finished-at="2024-03-12T09:54:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeloan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.day4@729d991e]" started-at="2024-03-12T09:54:22 IST" name="MobileLoginHomeLoan" finished-at="2024-03-12T09:54:22 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.day2@1de5f259]" started-at="2024-03-12T09:54:22 IST" name="prerequiste" finished-at="2024-03-12T09:54:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:test.day2@1de5f259]" started-at="2024-03-12T09:54:22 IST" name="ploan" finished-at="2024-03-12T09:54:22 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:21 IST" name="Bfsuite" finished-at="2024-03-12T09:54:21 IST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="befoclas()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="befoclas" finished-at="2024-03-12T09:54:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="beforeevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileLoginLoan()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="MobileLoginLoan" finished-at="2024-03-12T09:54:22 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="afterevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="beforeevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2024-03-12T09:54:22 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="afterevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="beforeevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2024-03-12T09:54:22 IST" duration-ms="44" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="afterevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="beforeevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="Mobilesignoutcarloan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="Mobilesignoutcarloan" data-provider="getData" finished-at="2024-03-12T09:54:22 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Mobilesignoutcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="afterevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="beforeevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APIcarloan()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="APIcarloan" finished-at="2024-03-12T09:54:22 IST" depends-on-methods="test.day3.Mobilesignoutcarloan, test.day3.MobileLoginLoan" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIcarloan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="afterevery" finished-at="2024-03-12T09:54:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="aftecls()[pri:0, instance:test.day3@194bcebf]" started-at="2024-03-12T09:54:22 IST" name="aftecls" finished-at="2024-03-12T09:54:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftecls -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@32502377]" started-at="2024-03-12T09:54:22 IST" name="Demo" finished-at="2024-03-12T09:54:22 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:65)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:23)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at test.day1.Demo(day1.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:test.day1@32502377]" started-at="2024-03-12T09:54:22 IST" name="SecondTest" finished-at="2024-03-12T09:54:22 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method signature="afsuite()[pri:0, instance:test.day1@32502377]" started-at="2024-03-12T09:54:22 IST" name="afsuite" finished-at="2024-03-12T09:54:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afsuite -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day1@32502377]" started-at="2024-03-12T09:54:22 IST" name="lastexecution" finished-at="2024-03-12T09:54:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Test -->
  </suite> <!-- Loan Department -->
</testng-results>
